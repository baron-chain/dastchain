syntax = "proto3";

package dastchain.dex;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "dastchain/dex/params.proto";

option go_package = "dastchain/x/dex/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams    (MsgUpdateParams   ) returns (MsgUpdateParamsResponse   );
  rpc SendCreatePair  (MsgSendCreatePair ) returns (MsgSendCreatePairResponse );
  rpc SendSellOrder   (MsgSendSellOrder  ) returns (MsgSendSellOrderResponse  );
  rpc SendBuyOrder    (MsgSendBuyOrder   ) returns (MsgSendBuyOrderResponse   );
  rpc CancelSellOrder (MsgCancelSellOrder) returns (MsgCancelSellOrderResponse);
  rpc CancelBuyOrder  (MsgCancelBuyOrder ) returns (MsgCancelBuyOrderResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                       "authority";
  option           (amino.name) = "dastchain/x/dex/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgSendCreatePair {
  option (cosmos.msg.v1.signer) = "creator";
  string sourceDenom      = 5;
  string targetDenom      = 6;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendCreatePairResponse {}

message MsgSendSellOrder {
  option (cosmos.msg.v1.signer) = "creator";
  string amountDenom      = 5;
  int32  amount           = 6;
  string priceDenom       = 7;
  int32  price            = 8;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendSellOrderResponse {}

message MsgSendBuyOrder {
  option (cosmos.msg.v1.signer) = "creator";
  string amountDenom      = 5;
  int32  amount           = 6;
  string priceDenom       = 7;
  int32  price            = 8;
  string creator          = 1;
  string port             = 2;
  string channelID        = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendBuyOrderResponse {}

message MsgCancelSellOrder {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string port        = 2;
  string channel     = 3;
  string amountDenom = 4;
  string priceDenom  = 5;
  int32  orderId     = 6;
}

message MsgCancelSellOrderResponse {}

message MsgCancelBuyOrder {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string port        = 2;
  string channel     = 3;
  string amountDenom = 4;
  string priceDenom  = 5;
  int32  orderId     = 6;
}

message MsgCancelBuyOrderResponse {}

